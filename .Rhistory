cSum = cbind(colSums(avarda2))
cSum = cSum/dim(avarda2)[1]
}
total_prob_generation(avarda,80)
return(cSum/dim(avarda2)[1])
total_prob_generation = function(avarda,threshold){
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda2[avarda2 <threshold] = 0
avarda2[avarda2 >=threshold] = 1
cSum = cbind(colSums(avarda2))
return(cSum/dim(avarda2)[1])
}
total_prob_generation(avarda,80)
View(cSum)
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda2[avarda2 <threshold] = 0
avarda2[avarda2 >=threshold] = 1
cSum = cbind(colSums(avarda2))
3/20
load_all()
load_all()
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrow = 40)
total_prob_generation(avarda,80)
x = total_prob_generation(avarda,80)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrows = 30)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrows = 30)
avarda_phage = avarda %>% select(grepl(bacteria,colnames(.)))
avarda_phage = avarda %>% select(grepl("bacteria",colnames(.)))
avarda_phage = avarda %>% select(grepl("bacteria",colnames(avarda)))
avarda_phage = avarda %>% select(grep("bacteria",colnames(.)))
avarda_phage = avarda %>% select(grep("bacteria",colnames(.)))
avarda_phage = avarda %>% select(grep("viruses",colnames(.)))
avarda_phage = avarda %>% select(grep("bacteria",colnames(.)))
avarda_virus = avarda %>% select(grep("viruses",colnames(.)))
avarda_virus = avarda %>% select(grep("viruses",colnames(.))) %>% mutate(rsum = rowSums(.))
View(avarda_virus)
avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% mutate(rsum = rowSums(.))
View(avarda_phage)
avarda = avarda_virus
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda_virus = avarda %>% select(grep(c(1,"viruses",colnames(.)))) %>% mutate(rsum = rowSums(.))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda = avarda_virus
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
View(avarda)
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.))) %>% mutate(rsum = rowSums(.))
View(avarda_virus)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrows = 30)
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrows = 30)
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.))) #%>% mutate(rsum = rowSums(.))
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrows = 30)
# avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.))) #%>% mutate(rsum = rowSums(.))
View(avarda_virus)
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
avarda = avarda_virus
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda2[avarda2 <threshold] = 0
threshold = 80
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda2[avarda2 <threshold] = 0
avarda2[avarda2 >=threshold] = 1
avarda2 = avarda2 %>% filter( mutate(rsum = rowSums(.)))
View(avarda2)
avarda2 = avarda2 %>% mutate(rsum = rowSums(.))
View(avarda2)
row_cut = 1
avarda2 = avarda2 %>% mutate(rsum = rowSums(.)) %>% filter(rsum>=row_cut) %>% select(-rsum)
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda2[avarda2 <threshold] = 0
avarda2[avarda2 >=threshold] = 1
avarda2 = avarda2 %>% mutate(rsum = rowSums(.)) %>% filter(rsum>=row_cut) %>% select(-rsum)
View(avarda2)
cSum = cbind(colSums(avarda2))
View(cSum)
cSum = cbind(colSums(avarda2)) %>% filter(. > 1)
cSum = cbind(colSums(avarda2)) %>% as.data.frame()
View(cSum)
cSum = cbind(colSums(avarda2)) %>% as.data.frame() %>% rownames_to_column()
cSum = cbind(colSums(avarda2)) %>% as.data.frame() %>% rownames_to_column()
View(cSum)
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda2[avarda2 <threshold] = 0
avarda2[avarda2 >=threshold] = 1
avarda2 = avarda2 %>% mutate(rsum = rowSums(.)) %>% filter(rsum>=row_cut) %>% select(-rsum)
cSum = cbind(colSums(avarda2)) %>% as.data.frame() %>% rownames_to_column() %>% filter(V1 >= col_cut)
cSum$V1 = cSum$V1/dim(avarda2)[1]
avarda2 <- avarda[,-1]
rownames(avarda2) <- avarda[,1] %>% unlist()
avarda2[avarda2 <threshold] = 0
avarda2[avarda2 >=threshold] = 1
avarda2 = avarda2 %>% mutate(rsum = rowSums(.)) %>% filter(rsum>=row_cut) %>% select(-rsum)
cSum = cbind(colSums(avarda2)) %>% as.data.frame() %>% rownames_to_column() %>% filter(V1 >= col_cut)
cSum$V1 = cSum$V1/dim(avarda2)[1]
load_all
load_all()
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrows = 30)
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
x = total_prob_generation(avarda,80,1,1)
View(x)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T,nrows = 30)
# avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
x = total_prob_generation(avarda_virus,80,1,1)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)#,nrows = 30)
# avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
x = total_prob_generation(avarda_virus,80,1,1)
View(x)
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)#,nrows = 30)
# avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% mutate(rsum = rowSums(.))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
x = total_prob_generation(avarda_virus,80,col_cut = 10,1)
View(x)
fwrite(x,"total_probs_phageome_virus.csv")
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)#,nrows = 30)
avarda_phage = avarda %>% select(grep("bacteria",colnames(.)))# %>% mutate(rsum = rowSums(.))
#avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
x = total_prob_generation(avarda_phage,80,col_cut = 10,1)
avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% distinct()
x = total_prob_generation(avarda_phage,80,col_cut = 10,1)
rownames(avarda_phage)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)#,nrows = 30)
avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% distinct()
avarda_phage = avarda %>% select(grep("bacteria",colnames(.))) %>% distinct(qseqid)
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)#,nrows = 30)
avarda_phage = avarda %>% select(1,grep("bacteria",colnames(.)))
#avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
x = total_prob_generation(avarda_phage,80,col_cut = 10,1)
fwrite(x,"total_probs_phageome_bacteria.csv")
use_r("Module_1")
virus_p = fread("Phageome/total_probs_phageome_virus.csv")
case = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")
View(case)
case = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")[,1:2]
blast = fread("Phageome/avarda_20200924.csv")
head(blast)
head(colnames(blast))
head(colnames(case))
head(colnames(virus_p))
blast = fread("Phageome/avarda_20200924.csv") %>% rename(u_pep_id = "qseqid")
fwrite(blast,"Phageome/avarda_20200924.csv")
blast = fread("Phageome/avarda_20200924.csv")
case_data.R = case_data %>% left_join(blast)
case_data.R = case_data %>% filter(.[[2]] > 5)
case_data =case
case_data.R = case_data %>% filter(.[[2]] > 5)
View(case_data.R)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast)
View(case_data.R)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-.[[2]])
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) #%>% select(-2)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
View(head(case_data.R))
case_peps = case_data.R[,1]
use_r(binary)
use_r("binary")
df <- data.frame(A = 1:8, B = 2:9, C = LETTERS[1:8], D = LETTERS[2:9], E = 3:10, F = 4:11)
df
g <- df %>% mutate_if(is.numeric, funs(. + 100))
g
a
df
g2 <- df %>% mutate_if(is.numeric, funs(./B))
g2
g <- df %>% mutate_if(is.numeric, .>80 =1)
g <- df %>% mutate_if(is.numeric, .>80 )
g <- df %>% mutate_if(is.numeric, funs(./B) )
g <- df %>% mutate_if(is.numeric, funs(./80) )
g
g <- df %>% mutate_if(is.numeric, funs(./80) =1 )
g <- df %>% mutate_if(is.numeric, funs(./80 =1) )
g <- df %>% mutate_if(is.numeric, ifelse(. >= 80, 1,0))
g
df2 <- df %>% mutate(is.numeric,ifelse(c1 >= 2,1,0))
df2 <- df %>% mutate(is.numeric,ifelse(. >= 2,1,0))
df2 <- df %>% mutate_if(is.numeric,ifelse(. >= 2,1,0))
df2 <- df %>% mutate_if(is.numeric,ifelse(~. >= 2,1,0))
df2 <- df %>% mutate_if(is.numeric,ifelse(~. >= 2,1,0))
df
df2 <- df %>% mutate_if(is.numeric,scale2)
scale2 <- function(x, na.rm = FALSE) (x - mean(x, na.rm = na.rm)) / sd(x, na.rm)
df2 <- df %>% mutate_if(is.numeric,as.integer(. >= 100))
df2 <- df %>% mutate_if(is.numeric,as.integer(~. >= 100))
g2 <- df %>% mutate_if(is.numeric, is.integer( funs(./B80)))
df <- data.frame(A = 1:8, B = 2:9, C = LETTERS[1:8], D = LETTERS[2:9], E = 3:10, F = 4:11)
df
g <- df %>% mutate_if(is.numeric, ifelse(. >= 80, 1,0))
g2 <- df %>% mutate_if(is.numeric, is.integer( funs(./B80)))
g2 <- df %>% mutate_if(is.numeric, is.integer( funs(./80)))
g2 <- df %>% mutate_if(is.numeric, (funs(./80)))
g2
g2 <- df %>% mutate_if(is.numeric, (funs(is.numeric(./80))))
g2
g2 <- df %>% mutate_if(is.numeric, (funs(as.integer(./80))))
g2
df
df <- data.frame(A = 80:89, B = 2:9, C = LETTERS[1:8], D = LETTERS[2:9], E = 3:10, F = 4:11)
df <- data.frame(A = 82:89, B = 2:9, C = LETTERS[1:8], D = LETTERS[2:9], E = 3:10, F = 4:11)
df
g2 <- df %>% mutate_if(is.numeric, (funs(as.integer(./80))))
g2
load_all()
load_all()
case_data.R %>% binary
case_data.R %>% binary(threshold = 80)
case_data.R
virus_p = fread("Phageome/total_probs_phageome_virus.csv")
case = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")[,1:2]
blast = fread("Phageome/avarda_20200924.csv")
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case_data = case
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case_peps = case_data.R[,1]
binary(case_data.R,80)
binary
load_all()
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case_peps = case_data.R[,1]
binary(case_data.R,80)
head(case_data.R)
head(case_data.R) %>% View()
head(case_data.R) %>% View()
sapply(case_data.R,typeof)
sapply(case_data.R,typeof) %>% head()
binary(case_data.R,80)
g2 <- case_data.R %>% mutate_if(is.numeric, (funs(as.integer(./threshold))))
g2 <- case_data.R %>% mutate_if(is.numeric, (funs(as.integer(./80))))
load_all()
binary(case_data.R,80)
case.binary = binary(case_data.R,80)
head(case.binary)
head(case.binary) %>% View()
case.binary
dim(case.binary)
case.binary = binary(case_data.R,80) %>% select(colSums(.)>10)
case.binary%>% select(colSums(.)>10)
colSums(case.binary(.))
colSums(case.binary)
numcolwise(case.binary)
numcolwise
case.binary = binary(case_data.R,80) %>% select(colSums(.[-1])>10)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
case.binary2 = case.binary %>% select(colSums(.[-1])>10)
case.binary
case.binary2 = case.binary[-1] %>% colSums()
case.binary2
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
avarda = fread("Phageome/avarda_20200924.csv",stringsAsFactors=FALSE, header=T)#,nrows = 30)
avarda_phage = avarda %>% select(1,grep("bacteria",colnames(.)))
avarda_virus = avarda %>% select(1,grep("viruses",colnames(.)))
fwrite(avarda_virus,"Phageome/avarda_virus.csv")
fwrite(avarda_phage,"Phageome/avarda_bacteria.csv")
virus_p = fread("Phageome/total_probs_phageome_virus.csv")
case = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")[,1:2]
blast = fread("Phageome/avarda_virus.csv")
case_data = case
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
case.binary2 = case.binary[-1] %>% colSums()
case.binary2
which(csums_index>10)
csums_index = case.binary[-1] %>% colSums()
which(csums_index>10)
csums_index = case.binary[-1] %>% colSums() %>% which(.> 10)
csums_index = case.binary[-1] %>% colSums() %>% which( > 10)
csums_index = which(case.binary[-1] %>% colSums()  > 10)
csums_index
csums_index = which(case.binary[-1] %>% colSums()  > 10) %>% unlist
csums_index
csums_index = which(case.binary[-1] %>% colSums()  > 10) +1
csums_index
csums_index = which(case.binary[-1] %>% colSums()  > 10) +1 %>% as.numeric()
csums_index
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 10) +1
csums_index
case.binary.sub = case.binary %>% select(c(1,csums_index))
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 10) +1
case.binary.sub = case.binary %>% select(c(1,csums_index))
View(case.binary.sub)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 5) +1
case.binary.sub = case.binary %>% select(c(1,csums_index))
dim(case.binary.sub)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 5) +1
case.binary.sub = case.binary %>% select(c(1,csums_index))
load_all
load_all()
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 5) +1
case.binary.sub = case.binary %>% select(c(1,csums_index))
View(case.binary.sub)
case.binary.sub.2 = case.binary.sub [-1]%>% colSums()
case.binary.sub.2
dim(case.binary.sub)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums())/dim(case.binary.sub)[1]
case.binary.sub.2
(case.binary.sub [-1]%>% colSums())
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame()
install_github("DeveloperName/PackageName")
install_github("drmonaco/AVARDA)
install_github("drmonaco/AVARDA")
install_github("drmonaco/AVARDA")
load_all()
library(data.table)
install_github("drmonaco/AVARDA")
install_github("drmonaco/AVARDA")
library(AVARDA)
virus_p = fread("Phageome/total_probs_phageome_virus.csv")
case = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")[,1:2]
blast = fread("Phageome/avarda_virus.csv")
case_data = case
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 5) +1
case.binary.sub = case.binary %>% select(c(1,csums_index))
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame()
View(case.binary.sub.2)
View(case.binary.sub)
View(case.binary.sub)
x = case_data.R %>% left_join(case.binary.sub.evidence)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 5) +1
case.binary.sub.evidence = case.binary %>% select(c(1,csums_index))
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame()
x = case_data.R %>% left_join(case.binary.sub.evidence)
x = case_data.R %>% left_join(case.binary.sub.evidence, by = "u_pep_id")
View(x)
View(case.binary.sub.evidence)
x = case_data.R %>% left_join(case.binary.sub.evidence[1], by = "u_pep_id")
x = case_data.R %>% filter(.[[1]] %in% case.binary.sub.evidence[[1]])
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2)
case.binary = binary(case_data.R,80)
csums_index = which(case.binary[-1] %>% colSums()  > 5) +1
case.binary.sub.evidence = case.binary %>% select(c(1,csums_index))
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame()
x = case_data.R %>% filter(.[[1]] %in% case.binary.sub.evidence[[1]])
case.binary.sub.evidence = case.binary %>% select(c(1,csums_index)) # subset evidence peptides above index - binary matrix of evidence peptides by alignnment
case.binary.sub.evidence
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame()
View(case.binary.sub.2)
output = list(case.binary.sub.evidence,case.binary.sub.2,case.binary.sub.all)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2) # threshold hits matrix and create blast matrix
case.binary = binary(case_data.R,80) # create binary matrix of evidence alignments
csums_index = which(case.binary[-1] %>% colSums()  > 5) + 1 # get just viruses that are enriched
case.binary.sub.evidence = case.binary %>% select(c(1,csums_index)) # subset evidence peptides above index - binary matrix of evidence peptides by alignnment
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() # summary of number of evidence peptides per virus
case.binary.sub.all = case_data.R %>% filter(.[[1]] %in% case.binary.sub.evidence[[1]]) # unbinaried data for all viruses
output = list(case.binary.sub.evidence,case.binary.sub.2,case.binary.sub.all)
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2) # threshold hits matrix and create blast matrix
case.binary = binary(case_data.R,80) # create binary matrix of evidence alignments
csums_index = which(case.binary[-1] %>% colSums()  > 5) + 1 # get just viruses that are enriched
case.binary.sub.evidence = case.binary %>% select(c(1,csums_index)) # subset evidence peptides above index - binary matrix of evidence peptides by alignnment
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() # summary of number of evidence peptides per virus
case.binary.sub.all = case_data.R %>% filter(.[[1]] %in% case.binary.sub.evidence[[1]]) # unbinaried data for all viruses
output = list(case.binary.sub.evidence,case.binary.sub.2,case.binary.sub.all)
total_prob = virus_p
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides` = dim(.)[2)# summary of number of evidence peptides per virus
case.binary.sub.all = case_data.R %>% filter(.[[1]] %in% case.binary.sub.evidence[[1]]) # unbinaried data for all viruses
output = list(case.binary.sub.evidence,case.binary.sub.2,case.binary.sub.all)
return(output)
}
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides` = dim(.)[2])# summary of number of evidence peptides per virus
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(.)[2])# summary of number of evidence peptides per virus
View(case.binary.sub.2)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(.)[2])#
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() #%>% mutate(all_peptides = dim(.)[2])# summary of number of evidence peptides per virus
dim(case.binary.sub.evidence)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1])# summary of number of evidence peptides per virus
View(case.binary.sub.2)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame("x") %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1])# summary of number of evidence peptides per virus
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame(col.names = "Test") %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1])# summary of number of evidence peptides per virus
View(case.binary.sub.2)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame(col.names = "Test")
View(case.binary.sub.2)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame(col.names = names("Test")) %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1])# summary of number of evidence peptides per virus
View(case.binary.sub.2)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1])# summary of number of evidence peptides per virus
View(case.binary.sub.2)
View(total_prob)
View(total_prob)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob)
View(case.binary.sub.2)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob) %>% mutate(pVal = binom.test(.[[2]],.[[3]],.[[4]]))
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob) %>% mutate(pVal = binom.test(`.`,all_peptides,V1))
colnames(case.binary.sub.2)[2] = "peps"
case.binary.sub.2 = case.binary.sub.2 %>% (pVal = binom.test(peps,all_peptides,V1))
case.binary.sub.2 %>% (pVal = binom.test(peps,all_peptides,V1))
colnames(case.binary.sub.2)
use_r("bt")
load_all()
load_all()
load_all()
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob)
case.binary.sub.2$pVal <- mapply(bt, case.binary.sub.2$peps, case.binary.sub.2$all_peptides,case.binary.sub.2$V1)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob)
View(case.binary.sub.2)
case.binary.sub.2$pVal <- mapply(bt, case.binary.sub.2$., case.binary.sub.2$all_peptides,case.binary.sub.2$V1)
View(case.binary.sub.2)
binom.test(25,362,0.14487101)
load_all()
case.binary.sub.2$pVal <- mapply(bt, case.binary.sub.2$., case.binary.sub.2$all_peptides,case.binary.sub.2$V1)
binom.test(25,362,0.14487101,alternative = "less")
binom.test(300,362,0.14487101,alternative = "less")
binom.test(300,362,0.14487101,alternative = "greater")
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2) # threshold hits matrix and create blast matrix
case.binary = binary(case_data.R,80) # create binary matrix of evidence alignments
csums_index = which(case.binary[-1] %>% colSums()  > 5) + 1 # get just viruses that are enriched
case.binary.sub.evidence = case.binary %>% select(c(1,csums_index)) # subset evidence peptides above index - binary matrix of evidence peptides by alignnment
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob)
case.binary.sub.2$pVal <- mapply(bt, case.binary.sub.2$., case.binary.sub.2$all_peptides,case.binary.sub.2$V1)
case.binary.sub.all = case_data.R %>% filter(.[[1]] %in% case.binary.sub.evidence[[1]]) # unbinaried data for all viruses
output = list(case.binary.sub.evidence,case.binary.sub.2,case.binary.sub.all)
v
case.binary.sub.2
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% rename(peps = ".") %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% rename(peps = ".") %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob) %>% mutate(pVal = mapply(bt, case.binary.sub.2$peps, case.binary.sub.2$all_peptides,case.binary.sub.2$V1))
View(case.binary.sub.2)
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% rename(peps = ".") %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob) %>% mutate(pVal = mapply(bt, case.binary.sub.2$peps, case.binary.sub.2$all_peptides,case.binary.sub.2$V1)) %>%
arrange(pVal)
View(case.binary.sub.2)
binom.test(29,362,0.19252222,alternative = "greater")
load_all
load_all()
case_data.R = case_data %>% filter(.[[2]] > 5) %>% left_join(blast) %>% select(-2) # threshold hits matrix and create blast matrix
case.binary = binary(case_data.R,80) # create binary matrix of evidence alignments
csums_index = which(case.binary[-1] %>% colSums()  > 5) + 1 # get just viruses that are enriched
case.binary.sub.evidence = case.binary %>% select(c(1,csums_index)) # subset evidence peptides above index - binary matrix of evidence peptides by alignnment
case.binary.sub.2 = (case.binary.sub [-1]%>% colSums()) %>% as.data.frame() %>% rename(peps = ".") %>% mutate(all_peptides = dim(case.binary.sub.evidence)[1]) %>%
rownames_to_column() %>% left_join(total_prob) %>% mutate(pVal = mapply(bt, case.binary.sub.2$peps, case.binary.sub.2$all_peptides,case.binary.sub.2$V1)) %>%
arrange(pVal)
View(case.binary.sub.2)
library(devtools)
install_github("drmonaco/AVARDA")
blast = fread("Phageome/avarda_virus.csv")
library(data.table)
blast = fread("Phageome/avarda_virus.csv")
data = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")
library(data.table)
blast = fread("Phageome/avarda_virus.csv")
data = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")
total = fread("Phageome/total_probs_phageome_virus.csv")
library(AVARDA)
Module1
Module_1
load_all()
library(data.table)
library(AVARDA)
blast = fread("Phageome/avarda_virus.csv")
data = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")
total = fread("Phageome/total_probs_phageome_virus.csv")
Module_1()
library(tidyverse)
Module_1()
Module_1(case_data = data[,1:2],blast = blast,total_prob = total_prob)
load_all()
Module_1(case_data = data[,1:2],blast = blast,total_prob = total_prob)
Module_1(case_data = data[,1:2],blast = blast,total_prob = total)
load_all()
Module_1(case_data = data[,1:2],blast = blast,total_prob = total)
x = Module_1(case_data = data[,1:2],blast = blast,total_prob = total)
x[[1]]
Module_1(data[,1:2],blast,total)
library(data.table)
library(AVARDA)
library(tidyverse)
Module_1(data[,1:2],blast,total)
devtools::document()
library(data.table)
library(AVARDA)
library(tidyverse)
Module_1(data[,1:2],blast,total)
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("Phageome/avarda_virus.csv")
data = fread("Phageome/phipseq_0140_PhageomeLa_001_Hits_foldchange.tsv")
total = fread("Phageome/total_probs_phageome_virus.csv")
Module_1(data[,1:2],blast,total)
