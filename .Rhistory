library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 5)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
library(doParallel)
detectCores()
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 5)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
registerDoParallel(  registerDoParallel(detectCores()))
zeta = foreach(R = 2:(dim(case_data)[2]),.combine=rbind) %dopar%{ #cycle through each patient column by column (goal is so be serialized)
data.R = data2 %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
detectCores
detectCores)
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
load_all()
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 5)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
View(tex)
case_data = data
2:(dim(case_data)[2])
R = 2
R =3
data.R = data2 %>% select(1,R)
R
data2 %>% select(1,R)
data2
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
load_all()
document()
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 5)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
R
R =2
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
View(x4)
R = 3
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
x
View(x)
View(case_data)
dim(x)
dim(x[1])
!is.null(dimx[[3]])
!is.null(dim(x_[[3]])
!is.null(dim(x)[[3]])
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
load_all()
R =3
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 5)
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
load_all()
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
registerDoParallel(detectCores())
R = 2
data.R = case_data %>% select(1,R)
case_data = data
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(!is.null(dim(x)[[3]])){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
is.null(dim(x)
dim(x)[[1]]
dim(x)[1]
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
x[[1]]
dim(x)[[1]]
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(!is.null(dim(x[[3]]))){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
load_all()
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(!is.null(dim(x[[3]]))){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
#zeta = foreach(R = 2:(dim(case_data)[2]),.combine=rbind) %dopar%{ #cycle through each patient column by column (goal is so be serialized)
zeta = foreach(R = 2:3),.combine=rbind) %dopar%{ #cycle through each patient column by column (goal is so be serialized)
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(!is.null(dim(x[[3]]))){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
if(!is.null(dim(x)[[3]])){
return(NULL)
}
}
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
#zeta = foreach(R = 2:(dim(case_data)[2]),.combine=rbind) %dopar%{ #cycle through each patient column by column (goal is so be serialized)
zeta = foreach(R = 2:3,.combine=rbind) %dopar%{ #cycle through each patient column by column (goal is so be serialized)
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(!is.null(dim(x[[3]]))){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
if(!is.null(dim(x)[[3]])){
return(NULL)
}
}
R = 3
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(!is.null(dim(x[[3]]))){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
x[[1]]
dim(x[[1]])
dim(x[[2]])
dim(x[[3]])
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
dim(x[[1]] != 0
dim(x[[1]])[1]
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
(dim(x[[1]])[1] != 0)
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(dim(x[[1]])[1] != 0){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
#zeta = foreach(R = 2:(dim(case_data)[2]),.combine=rbind) %dopar%{ #cycle through each patient column by column (goal is so be serialized)
zeta = foreach(R = 2:3,.combine=rbind) %dopar%{ #cycle through each patient column by column (goal is so be serialized)
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(data.R,blast,total,threshold = 10)
print("Module1_finished")
if(dim(x[[1]])[1] != 0){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
if(!is.null(dim(x)[[3]])){
return(NULL)
}
}
load_all()
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
tex
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
load_all()
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
load_all()
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/lcl_test.csv")
tex = AVARDA_compiled(case_data = data,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
View(tex)
View(data)
data2 = fread("~/Desktop/bin2/pairwise_enrichments_sing.csv")
View(data2)
colnames(data2)
data2 = data2 %>% select(1,73)
View(data2)
tex = AVARDA_compiled(case_data = data2,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/pairwise_enrichments_sing.csv")
data2 = data2 %>% select(1,73)
tex = AVARDA_compiled(case_data = data2,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
#
View(tex)
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/pairwise_enrichments_sing.csv")
#data2 = data2 %>% select(1,73)
tex = AVARDA_compiled(case_data = data2,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
case_data = data2
R = 12
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(case_data = data.R,blast = blast,total_prob = total,threshold = threshold)
threshold = 10
x = Module_1(case_data = data.R,blast = blast,total_prob = total,threshold = threshold)
print("Module1_finished")
dim(x[[1]])[1]
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
x =x[[3]]
all = filter_avarda(edge = dict,vertex = x %>% select(1))
df = data.frame(matrix(ncol = 2,nrow = dim(x)[2]))
colnames(df) = c("virus","filtered")
x.R = x %>% binary(threshold = 80) %>%  filter(.[[R]] > 0) %>% select(1)
x
x[[1]]
x = Module_1(case_data = data.R,blast = blast,total_prob = total,threshold = threshold)
x[[1]]
x[[2]]
x[[3]]
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(case_data = data.R,blast = blast,total_prob = total,threshold = threshold)
x
dim(x[[2]])
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
data.R = case_data %>% select(1,R)
colnames(data.R)[2]
x = Module_1(case_data = data.R,blast = blast,total_prob = total,threshold = threshold)
print("Module1_finished")
if(dim(x[[2]])[1] != 0){
x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
print("Module2_finished")
x3 = Module_3(x,x2,blast,total,pairwise,dict)
print("Module3_finished")
x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
x4 = x4 %>% mutate(Sample_ID = colnames(data.R)[2])
return(x4)
}
source('~/Desktop/AVARDA/R/AVARDA_compiled.R')
load_all()
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/pairwise_enrichments_sing.csv")
#data2 = data2 %>% select(1,73)
tex = AVARDA_compiled(case_data = data2,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
install_github("drmonaco/AVARDA")
library(data.table)
library(AVARDA)
library(tidyverse)
blast = fread("~/Desktop/bin2/VirScan_filtered_virus_blast_new.csv")
data = fread("~/Desktop/bin2/AVARDA_test_data.csv")
total = fread("~/Desktop/bin2/total_probability_xr2.csv")
dict = fread("~/Desktop/bin2/my_dict_shortnames.csv")
pairwise = fread("~/Desktop/bin2/unique_probabilities3.csv")
data2 = fread("~/Desktop/bin2/pairwise_enrichments_sing.csv")
data2 = data2 %>% select(1,73)
tex = AVARDA_compiled(case_data = data2,blast = blast,total_prob = total,pairwise = pairwise,dict = dict,threshold = 10)
#
# x = Module_1(data2[,1:2],blast,total,threshold = 10)
#
# x2 = Module_2(x =x[[3]] ,dict = dict,total = total)
#
# x3 = Module_3(x,x2,blast,total,pairwise,dict)
#
# x4 =sapply(x3,compiler,blast = blast,total_prob = total,dict = dict) %>% t() %>% as.data.frame() %>% mutate(pBH = p.adjust(pVal))
#
View(tex)
use_mit_license()
use_mit_license()
devtools::build_manual()
devtools::document()
c(c(100,50),c(0,100)
)
matrix(c(100,50,0,100)),nrow = 2)
matrix(c(100,50,0,100),nrow = 2)
document()
?binary
binary(matrix(c(100,50,0,100),nrow = 2), 70)
?AVARDA
??AVARDA
AVARDA::accumulate()
AVARDA
check()
devtools::document()
devtools::check()
binary(matrix(c(100,50,0,100),nrow = 2), 70)
binary(matrix(c(100,50,0,100),nrow = 2), 70)
load_all()
