x.R = x[[1]] %>% filter(.[[R]] > 0)
filter_avarda(edge = dict,vertex = x.R[[1]])
R =3
x.R = x[[1]] %>% filter(.[[R]] > 0)
filter_avarda(edge = dict,vertex = x.R[[1]])
filter_avarda(edge = dict,vertex = x.R[[1]])
x.R
vertex = x.R
nodes = unlist(vertex)
links_filtered = edge %>% filter(V1 %in% nodes)
links_filtered = links_filtered %>% filter(V2 %in% nodes)
vertex = NULL
nodes = unlist(vertex)
links_filtered = edge %>% filter(V1 %in% nodes)
links_filtered = links_filtered %>% filter(V2 %in% nodes)
length(nodes)
load_all
load_all()
x.R = x[[1]] %>% filter(.[[R]] > 0)
filter_avarda(edge = dict,vertex = x.R[[1]])
filter_avarda(edge = dict,vertex = x.R[[1]])
load_all()
x.R = x[[1]] %>% filter(.[[R]] > 0)
filter_avarda(edge = dict,vertex = x.R[[1]])
x[[1]]
x[[1]][[1]]
filter_avarda(edge = dict,vertex = x[[1]][[1]])
length(vertex = x[[1]][[1]])
length(x[[1]][[1]])
x.R
df = data.frame(matrix(ncol = 2,nrow = dim(x[[1]])[2]))
View(df)
filter_avarda(edge = dict,vertex = x[[1]][[1]])
df = data.frame(matrix(ncol = 2,nrow = dim(x[[1]])[2]))
colnames(df) = c("virus","filtered")
for(R in 2:dim(x[[1]])[2]){
x.R = x[[1]] %>% filter(.[[R]] > 0)
df[,1] = colnames(df)[R]
df[,2] = filter_avarda(edge = dict,vertex = x.R[[1]])
}
View(df)
filter_avarda(edge = dict,vertex = x[[1]][[1]])
df = data.frame(matrix(ncol = 2,nrow = dim(x[[1]])[2]))
colnames(df) = c("virus","filtered")
for(R in 2:dim(x[[1]])[2]){
x.R = x[[1]] %>% filter(.[[R]] > 0)
df[,1] = colnames(x[[1]])[R]
df[,2] = filter_avarda(edge = dict,vertex = x.R[[1]])
filter_avarda(edge = dict,vertex = x[[1]][[1]])
df = data.frame(matrix(ncol = 2,nrow = dim(x[[1]])[2]))
colnames(df) = c("virus","filtered")
for(R in 2:dim(x[[1]])[2]){
x.R = x[[1]] %>% filter(.[[R]] > 0)
df[,1] = colnames(x[[1]])[R]
df[,2] = filter_avarda(edge = dict,vertex = x.R[[1]])
}
View(df)
knitr::opts_chunk$set(echo = TRUE)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
View(ccp)
ccp = fread("~/Downloads/CCP serology.csv")
View(ccp)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
vertex = omega2
nodes = unlist(vertex)
links_filtered = edge %>% filter(qseqid %in% nodes)
links_filtered = links_filtered %>% filter(sseqid %in% nodes)
net <- simplify(as.undirected(graph_from_data_frame(d=links_filtered,vertices=nodes, directed=F) ))
meta_omega = fread("~/omega3.csv")
PAD2.peptides = meta_omega %>% filter(PAD == "PAD2")
PAD4.peptides = meta_omega %>% filter(PAD == "PAD4")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`)) %>% filter(V1 %in% PAD4.peptides$rowname)
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`)) %>% filter(V1 %in% PAD2.peptides$rowname)
# colnames(pad2) = paste0("PAD2_",colnames(pad2))
# colnames(pad4) = paste0("PAD4_",colnames(pad4))
V(net)$color <- ifelse((V(net)$name %>% unlist) %in%  PAD2.peptides$rowname, "lightblue", "orange")
x_l = layout.fruchterman.reingold(net)
plot(net,vertex.label=NA,vertex.size = 5,layout = x_l)
par(mfrow=c(3,4))
for(R in 1:10){
x = colnames(pad4)[R+1]
pad.R = rbind(pad4 %>% select(1,R+1),pad2 %>% select(1,R+1)) %>% rename(Sample = x) %>% filter(Sample >= 7)
V(net)$color <- ifelse((V(net)$name %>% unlist) %in%  PAD2.peptides$rowname, "lightblue", "orange")
V(net)$frame.color =  ifelse((V(net)$name %>% unlist) %in%  pad.R$V1, "black", NA)
plot(net,vertex.label=NA,vertex.size = 5,layout = x_l)
title(x,cex.main=3,col.main="black")
}
par(mfrow=c(3,4))
for(R in 11:21){
x = colnames(pad4)[R+1]
pad.R = rbind(pad4 %>% select(1,R+1),pad2 %>% select(1,R+1)) %>% rename(Sample = x) %>% filter(Sample >= 7)
V(net)$color <- ifelse((V(net)$name %>% unlist) %in%  PAD2.peptides$rowname, "lightblue", "orange")
V(net)$frame.color =  ifelse((V(net)$name %>% unlist) %in%  pad.R$V1, "black", NA)
plot(net,vertex.label=NA,vertex.size = 5,layout = x_l)
title(x,cex.main=3,col.main="black")
}
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
omega3 = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1)%>%  filter(  PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
matrix[matrix<7] = 0
matrix[matrix>=7] = 1
matrix2 = matrix %>% rownames_to_column()%>% right_join(omega3)
matrix.3 = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1) %>% as.data.frame()
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
filter_func  = function(edge,vertex){ #independence filter that takes a dictionary (defined above) and a set of nodes and tells the minimal number of unique epitopes
nodes = unlist(vertex)
links_filtered = edge %>% filter(qseqid %in% nodes)
links_filtered = links_filtered %>% filter(sseqid %in% nodes)
if(dim(links_filtered)[1]!=0){
net <- as.undirected(graph_from_data_frame(d=links_filtered,vertices=nodes, directed=F) )
x = decompose.graph(net)
x_1 = x[sapply(x,vcount)<30]
x_1_sum  = sum(unlist(lapply(x_1,independence.number)))
x_2 = x[sapply(x,vcount)>=30]
temp = c()
#x_2 = x
if(length(x_2) >0){
for(R in 1:length(x_2)){
x_2_r = x_2[[R]]
while(max(degree(x_2_r)>5)){
toss = degree(x_2_r)==max(degree(x_2_r))
x_2_r = delete_vertices(x_2_r, V(x_2_r)[toss])
}
x_l = decompose.graph(x_2_r)
temp[R] = sum(unlist(lapply(x_l,independence.number)))
}
}
return(sum(x_1_sum)+sum(temp))
}
if(dim(links_filtered)[1]==0){
return(length(nodes))
}
}
df = data.frame(matrix(nrow = 0,ncol = 7))
colnames(df) = c("ID","PAD2_all","PAD4_all","PAD2_ind","PAD4_ind","PAD2_total","PAD4_total")
for(R in 2:(dim(matrix2)[2]-1)){
name = colnames(matrix2)[R]
sample.R = matrix2[,c(1,R,40)] %>% rename(Sample =name)%>%  filter(Sample ==1)
sample.R.pad2 = sample.R %>% filter(PAD == "PAD2")
sample.R.pad4 = sample.R %>% filter(PAD == "PAD4")
pad2_ind = filter_func(edge,sample.R.pad2$rowname)
pad4_ind = filter_func(edge,sample.R.pad4$rowname)
matrix.3.R = matrix.3  %>% select(name) %>% filter(. >=7)
if(grepl("PAD2",name)){
PAD2_total =  dim(matrix.3.R)[1]
PAD4_total =  0
}
if(grepl("PAD4",name)){
PAD4_total =  dim(matrix.3.R)[1]
PAD2_total =  0
}
df[R-1,] = c(name,dim(sample.R.pad2)[1],dim(sample.R.pad4)[1],pad2_ind,pad4_ind,PAD2_total,PAD4_total)
}
dim(matrix2)[2]
View(matrix2)
name = colnames(matrix2)[R]
sample.R = matrix2[,c(1,R,40)] %>% rename(Sample =name)%>%  filter(Sample ==1)
sample.R.pad2 = sample.R %>% filter(PAD == "PAD2")
View(sample.R)
name = colnames(matrix2)[R]
sample.R = matrix2[,c(1,R,41)] %>% rename(Sample =name)%>%  filter(Sample ==1)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
omega3 = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1)%>%  filter(  PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
matrix[matrix<7] = 0
matrix[matrix>=7] = 1
matrix2 = matrix %>% rownames_to_column()%>% right_join(omega3)
matrix.3 = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1) %>% as.data.frame()
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
filter_func  = function(edge,vertex){ #independence filter that takes a dictionary (defined above) and a set of nodes and tells the minimal number of unique epitopes
nodes = unlist(vertex)
links_filtered = edge %>% filter(qseqid %in% nodes)
links_filtered = links_filtered %>% filter(sseqid %in% nodes)
if(dim(links_filtered)[1]!=0){
net <- as.undirected(graph_from_data_frame(d=links_filtered,vertices=nodes, directed=F) )
x = decompose.graph(net)
x_1 = x[sapply(x,vcount)<30]
x_1_sum  = sum(unlist(lapply(x_1,independence.number)))
x_2 = x[sapply(x,vcount)>=30]
temp = c()
#x_2 = x
if(length(x_2) >0){
for(R in 1:length(x_2)){
x_2_r = x_2[[R]]
while(max(degree(x_2_r)>5)){
toss = degree(x_2_r)==max(degree(x_2_r))
x_2_r = delete_vertices(x_2_r, V(x_2_r)[toss])
}
x_l = decompose.graph(x_2_r)
temp[R] = sum(unlist(lapply(x_l,independence.number)))
}
}
return(sum(x_1_sum)+sum(temp))
}
if(dim(links_filtered)[1]==0){
return(length(nodes))
}
}
df = data.frame(matrix(nrow = 0,ncol = 7))
colnames(df) = c("ID","PAD2_all","PAD4_all","PAD2_ind","PAD4_ind","PAD2_total","PAD4_total")
for(R in 2:(dim(matrix2)[2]-1)){
name = colnames(matrix2)[R]
sample.R = matrix2[,c(1,R,41)] %>% rename(Sample =name)%>%  filter(Sample ==1)
sample.R.pad2 = sample.R %>% filter(PAD == "PAD2")
sample.R.pad4 = sample.R %>% filter(PAD == "PAD4")
pad2_ind = filter_func(edge,sample.R.pad2$rowname)
pad4_ind = filter_func(edge,sample.R.pad4$rowname)
matrix.3.R = matrix.3  %>% select(name) %>% filter(. >=7)
if(grepl("PAD2",name)){
PAD2_total =  dim(matrix.3.R)[1]
PAD4_total =  0
}
if(grepl("PAD4",name)){
PAD4_total =  dim(matrix.3.R)[1]
PAD2_total =  0
}
df[R-1,] = c(name,dim(sample.R.pad2)[1],dim(sample.R.pad4)[1],pad2_ind,pad4_ind,PAD2_total,PAD4_total)
}
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
omega3 = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1)%>%  filter(  PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
matrix[matrix<7] = 0
matrix[matrix>=7] = 1
matrix2 = matrix %>% rownames_to_column()%>% right_join(omega3)
matrix.3 = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1) %>% as.data.frame()
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
filter_func  = function(edge,vertex){ #independence filter that takes a dictionary (defined above) and a set of nodes and tells the minimal number of unique epitopes
nodes = unlist(vertex)
links_filtered = edge %>% filter(qseqid %in% nodes)
links_filtered = links_filtered %>% filter(sseqid %in% nodes)
if(dim(links_filtered)[1]!=0){
net <- as.undirected(graph_from_data_frame(d=links_filtered,vertices=nodes, directed=F) )
x = decompose.graph(net)
x_1 = x[sapply(x,vcount)<30]
x_1_sum  = sum(unlist(lapply(x_1,independence.number)))
x_2 = x[sapply(x,vcount)>=30]
temp = c()
#x_2 = x
if(length(x_2) >0){
for(R in 1:length(x_2)){
x_2_r = x_2[[R]]
while(max(degree(x_2_r)>5)){
toss = degree(x_2_r)==max(degree(x_2_r))
x_2_r = delete_vertices(x_2_r, V(x_2_r)[toss])
}
x_l = decompose.graph(x_2_r)
temp[R] = sum(unlist(lapply(x_l,independence.number)))
}
}
return(sum(x_1_sum)+sum(temp))
}
if(dim(links_filtered)[1]==0){
return(length(nodes))
}
}
df = data.frame(matrix(nrow = 0,ncol = 7))
colnames(df) = c("ID","PAD2_all","PAD4_all","PAD2_ind","PAD4_ind","PAD2_total","PAD4_total")
for(R in 2:(dim(matrix2)[2]-1)){
name = colnames(matrix2)[R]
sample.R = matrix2[,c(1,R,41)] %>% rename(Sample =name)%>%  filter(Sample ==1)
sample.R.pad2 = sample.R %>% filter(PAD == "PAD2")
sample.R.pad4 = sample.R %>% filter(PAD == "PAD4")
pad2_ind = filter_func(edge,sample.R.pad2$rowname)
pad4_ind = filter_func(edge,sample.R.pad4$rowname)
matrix.3.R = matrix.3  %>% select(name) %>% filter(. >=7)
if(grepl("PAD2",name)){
PAD2_total =  dim(matrix.3.R)[1]
PAD4_total =  0
}
if(grepl("PAD4",name)){
PAD4_total =  dim(matrix.3.R)[1]
PAD2_total =  0
}
df[R-1,] = c(name,dim(sample.R.pad2)[1],dim(sample.R.pad4)[1],pad2_ind,pad4_ind,PAD2_total,PAD4_total)
}
name = colnames(matrix2)[R]
sample.R = matrix2[,c(1,R,41)] %>% rename(Sample =name)%>%  filter(Sample ==1)
sample.R.pad2 = sample.R %>% filter(PAD == "PAD2")
sample.R.pad4 = sample.R %>% filter(PAD == "PAD4")
name = colnames(matrix2)[R]
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
omega3 = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1)%>%  filter(  PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
matrix[matrix<7] = 0
matrix[matrix>=7] = 1
matrix2 = matrix %>% rownames_to_column()%>% right_join(omega3)
matrix.3 = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1) %>% as.data.frame()
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
filter_func  = function(edge,vertex){ #independence filter that takes a dictionary (defined above) and a set of nodes and tells the minimal number of unique epitopes
nodes = unlist(vertex)
links_filtered = edge %>% filter(qseqid %in% nodes)
links_filtered = links_filtered %>% filter(sseqid %in% nodes)
if(dim(links_filtered)[1]!=0){
net <- as.undirected(graph_from_data_frame(d=links_filtered,vertices=nodes, directed=F) )
x = decompose.graph(net)
x_1 = x[sapply(x,vcount)<30]
x_1_sum  = sum(unlist(lapply(x_1,independence.number)))
x_2 = x[sapply(x,vcount)>=30]
temp = c()
#x_2 = x
if(length(x_2) >0){
for(R in 1:length(x_2)){
x_2_r = x_2[[R]]
while(max(degree(x_2_r)>5)){
toss = degree(x_2_r)==max(degree(x_2_r))
x_2_r = delete_vertices(x_2_r, V(x_2_r)[toss])
}
x_l = decompose.graph(x_2_r)
temp[R] = sum(unlist(lapply(x_l,independence.number)))
}
}
return(sum(x_1_sum)+sum(temp))
}
if(dim(links_filtered)[1]==0){
return(length(nodes))
}
}
df = data.frame(matrix(nrow = 0,ncol = 7))
colnames(df) = c("ID","PAD2_all","PAD4_all","PAD2_ind","PAD4_ind","PAD2_total","PAD4_total")
for(R in 2:(dim(matrix2)[2]-1)){
name = colnames(matrix2)[R]
sample.R = matrix2[,c(1,R,42)] %>% rename(Sample =name)%>%  filter(Sample ==1)
sample.R.pad2 = sample.R %>% filter(PAD == "PAD2")
sample.R.pad4 = sample.R %>% filter(PAD == "PAD4")
pad2_ind = filter_func(edge,sample.R.pad2$rowname)
pad4_ind = filter_func(edge,sample.R.pad4$rowname)
matrix.3.R = matrix.3  %>% select(name) %>% filter(. >=7)
if(grepl("PAD2",name)){
PAD2_total =  dim(matrix.3.R)[1]
PAD4_total =  0
}
if(grepl("PAD4",name)){
PAD4_total =  dim(matrix.3.R)[1]
PAD2_total =  0
}
df[R-1,] = c(name,dim(sample.R.pad2)[1],dim(sample.R.pad4)[1],pad2_ind,pad4_ind,PAD2_total,PAD4_total)
}
bt <- function(a, b, p = 0.5) {binom.test(a, b, 0.5, alternative=
c("two.sided"), conf.level = 0.95)$p.value}
pad_sum = df %>% mutate(ID.2 = substring(ID,6,10)) %>% select(-ID) %>% group_by(ID.2) %>% summarise_all(max) %>% mutate(across(c(-ID.2), as.numeric)) %>% mutate(all_hits = PAD2_total+PAD4_total) %>% mutate(test = PAD2_ind+PAD4_ind) %>% mutate(test = ifelse(test == 0,1,test))
pad_sum$pVal <- mapply(bt, pad_sum$PAD2_ind, pad_sum$test)
ggplot(pad_sum,aes(x = PAD2_all,y = PAD4_all,size = all_hits,color = pVal))+geom_point()+theme(text = element_text(size=20))+theme_classic()+scale_size(range = c(0, 10))+ scale_color_gradient(low = "red", high = "black")
matrix = cbind(pad2,pad4) %>% as.data.frame()
colnames(matrix)
ccp = fread("~/Downloads/CCP serology.csv") %>% filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
meta_omega = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(PAD2_RA044,PAD4_RA044,-PAD4_V1)%>%  filter( PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
ccp = fread("~/Downloads/CCP serology.csv") %>% filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
meta_omega = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(PAD2_RA044,PAD4_RA044,-PAD4_V1)
View(matrix)
ccp = fread("~/Downloads/CCP serology.csv") %>% filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
meta_omega = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD4_V1)%>%  filter( PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
View(matrix)
ccp = fread("~/Downloads/CCP serology.csv") %>% filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
meta_omega = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD4_V1)%>%  filter( PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
PAD2.peptides = meta_omega %>% filter(PAD == "PAD2")
PAD4.peptides = meta_omega %>% filter(PAD == "PAD4")
matrix.pad2.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD2.peptides$rowname)
matrix.pad4.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD4.peptides$rowname)
ggplot(matrix.pad4.peptides,aes(x = PAD_sample,y = `Z-score`)) + geom_violin()+geom_quasirandom()+geom_hline(aes(yintercept = 7)) +theme_classic()+ggtitle("PAD4 Peptide Reactivities in all Samples")#+scale_y_log10()
library(MASS)
library(tidyverse)
library(data.table)
library(ggbeeswarm)
library(pheatmap)
library(ggplot2)
library(ggpubr)
library(knitr)
library(igraph)
ccp = fread("~/Downloads/CCP serology.csv") %>% filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
meta_omega = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD4_V1)%>%  filter( PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
PAD2.peptides = meta_omega %>% filter(PAD == "PAD2")
PAD4.peptides = meta_omega %>% filter(PAD == "PAD4")
matrix.pad2.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD2.peptides$rowname)
matrix.pad4.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD4.peptides$rowname)
ggplot(matrix.pad4.peptides,aes(x = PAD_sample,y = `Z-score`)) + geom_violin()+geom_quasirandom()+geom_hline(aes(yintercept = 7)) +theme_classic()+ggtitle("PAD4 Peptide Reactivities in all Samples")#+scale_y_log10()
View(matrix.pad4.peptides)
ccp = fread("~/Downloads/CCP serology.csv") %>% filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
meta_omega = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD4_V1)%>%  filter( PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
PAD2.peptides = meta_omega %>% filter(PAD == "PAD2")
PAD4.peptides = meta_omega %>% filter(PAD == "PAD4")
matrix.pad2.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD2.peptides$rowname)
matrix.pad4.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD4.peptides$rowname)
ggplot(matrix.pad2.peptides,aes(x = PAD_sample,y = `Z-score`)) + geom_violin()+geom_quasirandom()+geom_hline(aes(yintercept = 7)) +theme_classic()+ggtitle("PAD2 Peptide Reactivities in all Samples")#+scale_y_log10()
ccp = fread("~/Downloads/CCP serology.csv") %>% filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
meta_omega = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD4_V1)%>%  filter( PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
PAD2.peptides = meta_omega %>% filter(PAD == "PAD2")
PAD4.peptides = meta_omega %>% filter(PAD == "PAD4")
matrix.pad2.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD2.peptides$rowname)
matrix.pad4.peptides = matrix %>% rownames_to_column() %>%  gather(key = "Sample", value = "Z-score",-rowname) %>% mutate(PAD_sample = ifelse(grepl("PAD2",Sample),"PAD2","PAD4")) %>% filter(rowname %in% PAD4.peptides$rowname)
ggplot(matrix.pad4.peptides,aes(x = PAD_sample,y = `Z-score`)) + geom_violin()+geom_quasirandom()+geom_hline(aes(yintercept = 7)) +theme_classic()+ggtitle("PAD4 Peptide Reactivities in all Samples")#+scale_y_log10()
View(matrix.pad2.peptides)
View(matrix.pad4.peptides)
library(MASS)
library(tidyverse)
library(data.table)
library(ggbeeswarm)
library(pheatmap)
library(ggplot2)
library(ggpubr)
library(knitr)
library(igraph)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv")
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv")
View(omega2)
par(mfrow=c(3,4))
for(R in 1:10){
x = colnames(pad4)[R+1]
pad.R = rbind(pad4 %>% select(1,R+1),pad2 %>% select(1,R+1)) %>% rename(Sample = x) %>% filter(Sample >= 7)
V(net)$color <- ifelse((V(net)$name %>% unlist) %in%  PAD2.peptides$rowname, "lightblue", "orange")
V(net)$frame.color =  ifelse((V(net)$name %>% unlist) %in%  pad.R$V1, "black", NA)
plot(net,vertex.label=NA,vertex.size = 5,layout = x_l)
title(x,cex.main=3,col.main="black")
}
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
omega3 = fread("~/omega3.csv")
pad4 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD4_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
pad2 = fread("~/Downloads/OneDrive_1_1-14-2021/Unmod_PAD2_NM_zscores.txt") %>% dplyr::select(c(V1,ccp$`Patient ID`))
colnames(pad2) = paste0("PAD2_",colnames(pad2))
colnames(pad4) = paste0("PAD4_",colnames(pad4))
matrix = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD4_V1)%>%  filter(  PAD2_V1 %in% (omega2 %>% unlist %>% as.character)) %>%  column_to_rownames("PAD2_V1")
matrix[matrix<7] = 0
matrix[matrix>=7] = 1
matrix2 = matrix %>% rownames_to_column()%>% right_join(omega3)
matrix.3 = cbind(pad2,pad4) %>% as.data.frame() %>% dplyr::select(-PAD2_RA044,-PAD4_RA044,-PAD4_V1) %>% as.data.frame()
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue) %>% filter(evalue < 1) %>% select(-evalue)
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv")
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv")
ccp = fread("~/Downloads/CCP serology.csv") %>% dplyr::filter(`CCP Status` == "(+)")
omega2 = fread("~/omega2.csv")
edge = fread("omega_blast_x.csv") %>% select(qseqid,sseqid,evalue)
select
